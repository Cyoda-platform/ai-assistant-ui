@use 'sass:map';
@use 'sass:list';

$breakpoints: (
        xs: 480px,
        sm: 768px,
        md: 992px,
        lg: 1200px,
        xl: 1920px
);

@mixin respond-max($breakpoint) {
  $value: map.get($breakpoints, $breakpoint);
  @if $value == null {
    @error "Breakpoint '#{$breakpoint}' not found in $breakpoints map.";
  }
  @media (max-width: $value) {
    @content;
  }
}

@mixin respond-min($breakpoint) {
  $value: map.get($breakpoints, $breakpoint);
  @if $value == null {
    @error "Breakpoint '#{$breakpoint}' not found in $breakpoints map.";
  }
  @media (min-width: $value) {
    @content;
  }
}

@each $name, $size in $breakpoints {
  .hidden-below-#{$name} {
    @media (max-width: $size - 1px) {
      display: none !important;
    }
  }
}

@each $name, $size in $breakpoints {
  .hidden-above-#{$name} {
    @media (min-width: $size) {
      display: none !important;
    }
  }
}

$breakpoint-names: map.keys($breakpoints);
@each $name, $size in $breakpoints {
  .visible-only-#{$name} {
    display: none !important;

    $current-index: list.index($breakpoint-names, $name);
    $next-breakpoint: null;

    @if $current-index < list.length($breakpoint-names) {
      $next-name: list.nth($breakpoint-names, $current-index + 1);
      $next-breakpoint: map.get($breakpoints, $next-name);
    }

    @if $next-breakpoint {
      @media (min-width: $size) and (max-width: $next-breakpoint - 1px) {
        display: block !important;
      }
    } @else {
      @media (min-width: $size) {
        display: block !important;
      }
    }
  }
}

.hidden-mobile {
  @media (max-width: map.get($breakpoints, md) - 1px) {
    display: none !important;
  }
}

.visible-mobile {
  display: none !important;
  @media (max-width: map.get($breakpoints, md) - 1px) {
    display: block !important;
  }
}

.hidden-tablet {
  @media (min-width: map.get($breakpoints, md)) and (max-width: map.get($breakpoints, lg) - 1px) {
    display: none !important;
  }
}

.visible-tablet {
  display: none !important;
  @media (min-width: map.get($breakpoints, md)) and (max-width: map.get($breakpoints, lg) - 1px) {
    display: block !important;
  }
}

.hidden-desktop {
  @media (min-width: map.get($breakpoints, lg)) {
    display: none !important;
  }
}

.visible-desktop {
  display: none !important;
  @media (min-width: map.get($breakpoints, lg)) {
    display: block !important;
  }
}